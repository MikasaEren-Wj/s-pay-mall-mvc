<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>s-pay-mall-mika</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <modules>
        <module>s-pay-mall-common</module>
        <module>s-pay-mall-dao</module>
        <module>s-pay-mall-domain</module>
        <module>s-pay-mall-service</module>
        <module>s-pay-mall-web</module>
    </modules>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    <!--  啊里云仓库-->
    <repositories>
        <repository>
            <id>nexus-aliyun</id>
            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
    <!--  开发者信息-->
    <developers>
        <developer>
            <name>mikasa</name>
            <email>2695855867@qq.com</email>
        </developer>
    </developers>

    <!-- 父工程-->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.12</version>
    </parent>

    <!--    使用dependencyManagement不是真的引入 而是便于管理版本 后续各个模块依旧需要自己引入-->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>2.1.4</version>
            </dependency>
            <!-- # 多数据源路由配置
                 # mysql 5.x driver-class-name: com.mysql.jdbc.Driver    mysql-connector-java 5.1.34
                 # mysql 8.x driver-class-name: com.mysql.cj.jdbc.Driver mysql-connector-java 8.0.23-->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>8.0.23</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>2.0.28</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.9</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>32.1.3-jre</version>
            </dependency>
            <dependency>
                <groupId>dom4j</groupId>
                <artifactId>dom4j</artifactId>
                <version>1.6.1</version>
            </dependency>
            <dependency>
                <groupId>com.thoughtworks.xstream</groupId>
                <artifactId>xstream</artifactId>
                <version>1.4.18</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>0.9.1</version>
            </dependency>
            <dependency>
                <groupId>com.auth0</groupId>
                <artifactId>java-jwt</artifactId>
                <version>4.4.0</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>1.15</version>
            </dependency>
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson-spring-boot-starter</artifactId>
                <version>3.26.0</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.retrofit2</groupId>
                <artifactId>retrofit</artifactId>
                <version>2.9.0</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.retrofit2</groupId>
                <artifactId>converter-jackson</artifactId>
                <version>2.9.0</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.retrofit2</groupId>
                <artifactId>adapter-rxjava2</artifactId>
                <version>2.9.0</version>
            </dependency>
            <!-- 支付宝沙箱支付对接文档：https://opendocs.alipay.com/common/02kkv7 -->
            <dependency>
                <groupId>com.alipay.sdk</groupId>
                <artifactId>alipay-sdk-java</artifactId>
                <version>4.38.157.ALL</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <!--负责处理 Maven 项目中的资源文件-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <!--该插件用于检查和更新 pom.xml 中的依赖版本，确保项目使用的是最新的依赖库。-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.7</version>
            </plugin>

        </plugins>
    </build>

    <profiles>
        <!-- 开发环境配置 -->
        <profile>
            <id>dev</id> <!-- 该 profile 的 ID 为 "dev" -->
            <activation>
                <!-- 默认情况下激活 dev 环境 -->
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!-- JVM 参数设置：开发环境的内存配置和垃圾回收等 -->
                <java_jvm>
                    -Xms1G -Xmx1G -server
                    -XX:MaxPermSize=256M
                    -Xss256K
                    -Dspring.profiles.active=test <!-- 激活 Spring Boot 的 test 配置文件 -->
                    -XX:+DisableExplicitGC
                    -XX:+UseG1GC
                    -XX:LargePageSizeInBytes=128m
                    -XX:+UseFastAccessorMethods
                    -XX:+HeapDumpOnOutOfMemoryError
                    -XX:HeapDumpPath=/export/Logs/s-pay-mall-boot <!-- 堆转储路径 -->
                    -Xloggc:/export/Logs/s-pay-mall-boot/gc-s-pay-mall-boot.log <!-- GC 日志路径 -->
                    -XX:+PrintGCDetails
                    -XX:+PrintGCDateStamps
                </java_jvm>
                <!-- 指定当前活动的 Spring Profile -->
                <profileActive>dev</profileActive>
            </properties>
        </profile>

        <!-- 测试环境配置 -->
        <profile>
            <id>test</id> <!-- 该 profile 的 ID 为 "test" -->
            <properties>
                <!-- JVM 参数设置：测试环境的内存配置和垃圾回收等 -->
                <java_jvm>
                    -Xms1G -Xmx1G -server
                    -XX:MaxPermSize=256M
                    -Xss256K
                    -Dspring.profiles.active=test <!-- 激活 Spring Boot 的 test 配置文件 -->
                    -XX:+DisableExplicitGC
                    -XX:+UseG1GC
                    -XX:LargePageSizeInBytes=128m
                    -XX:+UseFastAccessorMethods
                    -XX:+HeapDumpOnOutOfMemoryError
                    -XX:HeapDumpPath=/export/Logs/s-pay-mall-boot
                    -Xloggc:/export/Logs/s-pay-mall-boot/gc-s-pay-mall-boot.log
                    -XX:+PrintGCDetails
                    -XX:+PrintGCDateStamps
                </java_jvm>
                <!-- 指定当前活动的 Spring Profile -->
                <profileActive>test</profileActive>
            </properties>
        </profile>

        <!-- 生产环境配置 -->
        <profile>
            <id>prod</id> <!-- 该 profile 的 ID 为 "prod" -->
            <properties>
                <!-- JVM 参数设置：生产环境的内存配置和垃圾回收等 -->
                <java_jvm>
                    -Xms6G -Xmx6G -server
                    -XX:MaxPermSize=256M
                    -Xss256K
                    -Dspring.profiles.active=release <!-- 激活 Spring Boot 的 release 配置文件 -->
                    -XX:+DisableExplicitGC
                    -XX:+UseG1GC
                    -XX:LargePageSizeInBytes=128m
                    -XX:+UseFastAccessorMethods
                    -XX:+HeapDumpOnOutOfMemoryError
                    -XX:HeapDumpPath=/export/Logs/fq-mall-activity-app
                    -Xloggc:/export/Logs/s-pay-mall-boot/gc-s-pay-mall-boot.log
                    -XX:+PrintGCDetails
                    -XX:+PrintGCDateStamps
                </java_jvm>
                <!-- 指定当前活动的 Spring Profile -->
                <profileActive>prod</profileActive>
            </properties>
        </profile>
    </profiles>


</project>
